name: CI

on:
  push:
    branches: [ main, 'feature/**' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      run_e2e:
        description: "Run full E2E (heavy)"
        required: false
        default: 'false'

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install linting tools
        run: |
          python -m pip install --upgrade pip
          pip install ruff black
      - name: Run ruff
        run: ruff check .
      - name: Check formatting (black)
        run: black --check .

  unit-tests:
    name: Unit tests
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt || true
          pip install -r requirements-dev.txt || true
      - name: Run unit tests
        run: |
          mkdir -p reports
          pytest -q --junitxml=reports/junit.xml -m "unit or not integration and not e2e"
      - name: Upload test report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: junit-${{ github.run_id }}
          path: reports/junit.xml

  e2e:
    name: End-to-end (manual)
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' && (github.event.inputs.run_e2e == 'true')
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Ensure scripts are executable
        run: chmod +x ./scripts/*.sh || true
      - name: Run full E2E flow (this will start Docker Postgres)
        env:
          CI: true
        run: |
          set -o pipefail
          mkdir -p logs
          ./scripts/run_e2e_safe.sh --ci | tee logs/ci_e2e_run.log
      - name: Upload logs and artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: e2e-logs-${{ github.run_id }}
          path: |
            logs/**
            **/migrations.log
          retention-days: 7

  conda-test:
    name: Run tests (conda environment)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Miniconda and create environment
        uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: 3.11
          auto-update-conda: true
          activate-environment: justnews-pinned
          environment-file: environment.yml
          use-mamba: true

      - name: Activate environment and run pytest (unit-only)
        shell: bash -l {0}
        run: |
          conda activate justnews-pinned
          # Ensure pytest is available
          pip install -U pip setuptools wheel
          pip install pytest
          mkdir -p reports
          pytest -q --junitxml=reports/junit.xml -k "not integration" --maxfail=1
      - name: Upload junit report (conda)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: junit-conda-${{ github.run_id }}
          path: reports/junit.xml
